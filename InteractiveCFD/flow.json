[
    {
        "id": "3e745e36ff578044",
        "type": "tab",
        "label": "mainflow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b1813a83246977f7",
        "type": "tab",
        "label": "MQTT_communication",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f633a238518a1779",
        "type": "mqtt-broker",
        "name": "",
        "broker": "37c13e56269242e19d8de5a4f509ac68.s2.eu.hivemq.cloud",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3e23a6fd421c4e41",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt-dashboard.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ad4a3b3c95053afd",
        "type": "nextcloud-credentials",
        "cname": "",
        "address": "https://cloud.tuhh.de",
        "insecure": false
    },
    {
        "id": "bd5a391d566dae34",
        "type": "webdav-credentials",
        "cname": "",
        "address": "https://cloud.tuhh.de",
        "basePath": "remote.php/webdav/files/",
        "insecure": false
    },
    {
        "id": "f03ecbd9c5722524",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "840dd2f7c1175677"
            ]
        ]
    },
    {
        "id": "840dd2f7c1175677",
        "type": "exec",
        "z": "3e745e36ff578044",
        "command": " docker start openfoam",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker start",
        "x": 330,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "05ec4df4693454af"
            ]
        ]
    },
    {
        "id": "05ec4df4693454af",
        "type": "exec",
        "z": "3e745e36ff578044",
        "command": "docker exec -w /data/jeswin_test1 openfoam bash -c \"source /usr/lib/openfoam/openfoam2212/etc/bashrc && ./Allrunparallel\"",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Allrunparallel",
        "x": 510,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "4d9a081c12c0376c"
            ]
        ]
    },
    {
        "id": "de2bf0a639f4a6bb",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1180,
        "y": 20,
        "wires": [
            [
                "bf84947ea715a0a2"
            ]
        ]
    },
    {
        "id": "d9da75269833ea55",
        "type": "mqtt in",
        "z": "3e745e36ff578044",
        "name": "",
        "topic": "sim_process",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3e23a6fd421c4e41",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 20,
        "wires": [
            [
                "f04603a7df5a3291"
            ]
        ]
    },
    {
        "id": "573230bd4a09471a",
        "type": "debug",
        "z": "3e745e36ff578044",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 140,
        "wires": []
    },
    {
        "id": "842eff4626a04586",
        "type": "debug",
        "z": "3e745e36ff578044",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 80,
        "wires": []
    },
    {
        "id": "f04603a7df5a3291",
        "type": "exec",
        "z": "3e745e36ff578044",
        "command": "cd \"C:/Users/XR-Lab/Documents/Jeswin Files/Project HoloCFD/openfoamdocker\" && conda run -n Acrossim python TesselateParaview.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "TesselateParaview",
        "x": 750,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "76ad315c9c659434"
            ]
        ]
    },
    {
        "id": "02488c6ed8f21066",
        "type": "exec",
        "z": "3e745e36ff578044",
        "command": "cd \"C:/Users/XR-Lab/Documents/Jeswin Files/Project HoloCFD/openfoamdocker\" && \"C:\\Program Files\\Blender Foundation\\Blender 3.5\\3.5\\python\\bin\\python.exe\" TesselateBlender.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "TesselateBlender",
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "573230bd4a09471a"
            ],
            [],
            [
                "bf84947ea715a0a2",
                "a1db41850ea0bf01"
            ]
        ]
    },
    {
        "id": "ded2f3eb09cd4e45",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 20,
        "wires": [
            [
                "f04603a7df5a3291"
            ]
        ]
    },
    {
        "id": "bf84947ea715a0a2",
        "type": "exec",
        "z": "3e745e36ff578044",
        "command": "docker exec -w /data/jeswin_test1 openfoam bash -c \"source /usr/lib/openfoam/openfoam2212/etc/bashrc && ./Allcleanlognew\"",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Allcleanlog",
        "x": 1290,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "842eff4626a04586"
            ]
        ]
    },
    {
        "id": "4ed0aad7e08a5dc4",
        "type": "link in",
        "z": "3e745e36ff578044",
        "name": "link in 1",
        "links": [
            "643ffeb4a6cb1432"
        ],
        "x": 185,
        "y": 140,
        "wires": [
            [
                "840dd2f7c1175677",
                "f084791b8f176a99"
            ]
        ]
    },
    {
        "id": "4e44684359a0dd87",
        "type": "comment",
        "z": "3e745e36ff578044",
        "name": "MQTTAfterfile",
        "info": "AfterFile",
        "x": 130,
        "y": 240,
        "wires": []
    },
    {
        "id": "f084791b8f176a99",
        "type": "mqtt out",
        "z": "3e745e36ff578044",
        "name": "MqttOut",
        "topic": "sim_complete",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3e23a6fd421c4e41",
        "x": 520,
        "y": 500,
        "wires": []
    },
    {
        "id": "cfe683cfcff78abc",
        "type": "change",
        "z": "3e745e36ff578044",
        "name": "Success message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Success",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 200,
        "wires": [
            [
                "573230bd4a09471a",
                "17e2ae2dc1d38cdc"
            ]
        ]
    },
    {
        "id": "fc6a98909359f904",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Error",
        "payloadType": "str",
        "x": 1290,
        "y": 500,
        "wires": [
            [
                "f084791b8f176a99"
            ]
        ]
    },
    {
        "id": "4d9a081c12c0376c",
        "type": "function",
        "z": "3e745e36ff578044",
        "name": "function 23",
        "func": "if (msg.payload.code !== 0) {\n    // The code is not equal to 0, so it's an error\n    msg.payload = \"Simulation,Error\";\n    return msg;\n} else {\n    // The code is equal to 0, no error\n    msg.payload = \"Simulation,Success\";\n    return msg; // Continue with the original message\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            [
                "f084791b8f176a99",
                "e42a66e44278f7a4"
            ]
        ]
    },
    {
        "id": "e42a66e44278f7a4",
        "type": "switch",
        "z": "3e745e36ff578044",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Simulation,Success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "f04603a7df5a3291"
            ]
        ]
    },
    {
        "id": "dfe606710907fed4",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "kill",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "05ec4df4693454af"
            ]
        ]
    },
    {
        "id": "76ad315c9c659434",
        "type": "function",
        "z": "3e745e36ff578044",
        "name": "function 24",
        "func": "if (msg.payload.code !== 0) {\n    // The code is not equal to 0, so it's an error\n    msg.payload = \"Paraview,Error\";\n    return msg;\n} else {\n    // The code is equal to 0, no error\n    msg.payload = \"Postprocess,Success\";\n    return msg; // Continue with the original message\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "f084791b8f176a99",
                "b8a12307cb489bb8"
            ]
        ]
    },
    {
        "id": "b8a12307cb489bb8",
        "type": "switch",
        "z": "3e745e36ff578044",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Postprocess,Success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 200,
        "wires": [
            [
                "02488c6ed8f21066"
            ]
        ]
    },
    {
        "id": "a1db41850ea0bf01",
        "type": "function",
        "z": "3e745e36ff578044",
        "name": "function 25",
        "func": "if (msg.payload.code !== 0) {\n    // The code is not equal to 0, so it's an error\n    msg.payload = \"Blender,Error\";\n    return msg;\n} else {\n    // The code is equal to 0, no error\n    msg.payload = \"Cloudupload,Success\";\n    return msg; // Continue with the original message\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 200,
        "wires": [
            [
                "f084791b8f176a99",
                "26380b3bf84e15a5"
            ]
        ]
    },
    {
        "id": "26380b3bf84e15a5",
        "type": "switch",
        "z": "3e745e36ff578044",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cloudupload,Success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1350,
        "y": 200,
        "wires": [
            [
                "cfe683cfcff78abc"
            ]
        ]
    },
    {
        "id": "17e2ae2dc1d38cdc",
        "type": "function",
        "z": "3e745e36ff578044",
        "name": "function 26",
        "func": "// Check the topic and act accordingly\nif (msg.topic === \"filename\") {\n    // Store the payload in the flow context under the key \"filenamePayload\"\n    flow.set(\"filenamePayload\", msg.payload);\n} else if (msg.topic === \"Success\") {\n    // Get the stored payload from the flow context\n    var storedPayload = flow.get(\"filenamePayload\");\n    // Check if there was a stored payload\n    if (storedPayload !== undefined) {\n        // Set the stored payload as the current payload\n        msg.payload = storedPayload + \",\" + \"Success\";\n        // Clear the stored payload from the context\n        flow.set(\"filenamePayload\", undefined);\n        // Return the message to be sent out of the function node\n        return msg;\n    }\n}\n// If the conditions are not met, return null to prevent the node from sending a message\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 280,
        "wires": [
            [
                "f084791b8f176a99"
            ]
        ]
    },
    {
        "id": "0b699531b271db04",
        "type": "link in",
        "z": "3e745e36ff578044",
        "name": "link in 2",
        "links": [
            "554c3e359c5104e7"
        ],
        "x": 1325,
        "y": 280,
        "wires": [
            [
                "a401450fd7d1a8d4"
            ]
        ]
    },
    {
        "id": "a401450fd7d1a8d4",
        "type": "change",
        "z": "3e745e36ff578044",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "filename",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 280,
        "wires": [
            [
                "17e2ae2dc1d38cdc"
            ]
        ]
    },
    {
        "id": "82f6633d44908fdf",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "558+0.05+HE12+T",
        "payloadType": "str",
        "x": 1310,
        "y": 320,
        "wires": [
            [
                "a401450fd7d1a8d4"
            ]
        ]
    },
    {
        "id": "649fa3533d44d75c",
        "type": "inject",
        "z": "3e745e36ff578044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1680,
        "y": 100,
        "wires": [
            [
                "cfe683cfcff78abc"
            ]
        ]
    },
    {
        "id": "87d1c7252f8a980e",
        "type": "template",
        "z": "b1813a83246977f7",
        "name": "Temperature",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "boundaryField\n{\n    \n    wall\n    {\n        type            zeroGradient;\n    }\n\n    symmetry\n    {\n        type            symmetry;\n    }\n\n    pipe\n    {\n        type            fixedValue;    // pipe has constant T\n        value           uniform    {{payload}} ;\n    }\n\n    outlet\n    {\n        type            zeroGradient;\n    }\n\n    inlet\n    {\n        type            fixedValue;   \n        value           uniform    300;\n    }\n}\n\n\n// ************************************************************************* //\n",
        "output": "str",
        "x": 510,
        "y": 300,
        "wires": [
            [
                "9798b407664b3155"
            ]
        ]
    },
    {
        "id": "3f1c11f9bd827b07",
        "type": "inject",
        "z": "b1813a83246977f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sim_control_temperature",
        "payload": "500",
        "payloadType": "str",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "87d1c7252f8a980e",
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "35410e808e4d85d5",
        "type": "mqtt in",
        "z": "b1813a83246977f7",
        "name": "",
        "topic": "sim_control_temperature",
        "qos": "2",
        "datatype": "utf8",
        "broker": "3e23a6fd421c4e41",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 400,
        "wires": [
            [
                "87d1c7252f8a980e",
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "0ba63e928eae0a8b",
        "type": "template",
        "z": "b1813a83246977f7",
        "name": "Velocity",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "boundaryField\n{\n    wall\n    {\n        type            noSlip;\n    }\n\n    symmetry\n    {\n        type            symmetry;\n    }\n\n    pipe\n    {\n        type            noSlip;\n    }\n\n    inlet\n    {\n        type            fixedValue;\n        value     uniform (0 {{payload}} 0) ;\t// Re = 5000 for u(inlet) = 0.05 m/s\n    }\n\n    outlet\n    {\n        type            zeroGradient;\n    }\n}\n\n\n// ************************************************************************* //\n",
        "output": "str",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "e52d5b2d5dabab0f"
            ]
        ]
    },
    {
        "id": "5adb87c4f332be43",
        "type": "file",
        "z": "b1813a83246977f7",
        "name": "Unew",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\jeswin_test1\\300\\U",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "ascii",
        "x": 1230,
        "y": 580,
        "wires": [
            [
                "ce02247d212f3006"
            ]
        ]
    },
    {
        "id": "66e4c9e9ed661c15",
        "type": "mqtt in",
        "z": "b1813a83246977f7",
        "name": "",
        "topic": "sim_control_velocity",
        "qos": "2",
        "datatype": "utf8",
        "broker": "3e23a6fd421c4e41",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 640,
        "wires": [
            [
                "0ba63e928eae0a8b",
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "882f9db02bde07fc",
        "type": "inject",
        "z": "b1813a83246977f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sim_control_velocity",
        "payload": "0.05",
        "payloadType": "str",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "0ba63e928eae0a8b",
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "a5235ad17bfd6921",
        "type": "template",
        "z": "b1813a83246977f7",
        "name": "ControlDict",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  v2212                                 |\n|   \\\\  /    A nd           | Website:  www.openfoam.com                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      controlDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\napplication     buoyantBoussinesqSimpleFoam;\n\nstartFrom       startTime;\n\nstartTime       0;\n\nstopAt          endTime;\n\nendTime   \t{{payload}};\n\ndeltaT          1;\n\nwriteControl    timeStep;\n\nwriteInterval   10;\n\npurgeWrite      0;\n\nwriteFormat     ascii;\n\nwritePrecision  6;\n\nwriteCompression off;\n\ntimeFormat      general;\n\ntimePrecision   6;\n\nrunTimeModifiable true;\n\n\n// ************************************************************************* //\n",
        "output": "str",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "40a60c8371159533",
                "1971e6ed09a32419"
            ]
        ]
    },
    {
        "id": "40a60c8371159533",
        "type": "file",
        "z": "b1813a83246977f7",
        "name": "ControlDictNew",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\jeswin_test1\\system\\controlDict",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "ascii",
        "x": 720,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "52ed1f79226b41aa",
        "type": "inject",
        "z": "b1813a83246977f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1000",
        "payloadType": "str",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "a5235ad17bfd6921"
            ]
        ]
    },
    {
        "id": "1971e6ed09a32419",
        "type": "debug",
        "z": "b1813a83246977f7",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "90aada988b880ffa",
        "type": "mqtt in",
        "z": "b1813a83246977f7",
        "name": "",
        "topic": "sim_control_control",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3e23a6fd421c4e41",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 160,
        "wires": [
            [
                "a5235ad17bfd6921"
            ]
        ]
    },
    {
        "id": "c7de61dde446d51d",
        "type": "join",
        "z": "b1813a83246977f7",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1710,
        "y": 420,
        "wires": [
            [
                "d30b646f879f28ce",
                "775b122beb07d83a"
            ]
        ]
    },
    {
        "id": "643ffeb4a6cb1432",
        "type": "link out",
        "z": "b1813a83246977f7",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "4ed0aad7e08a5dc4",
            "3e66c0df59b8bee2"
        ],
        "x": 2065,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d33d1562b5a0739",
        "type": "comment",
        "z": "b1813a83246977f7",
        "name": "mainflow",
        "info": "Connects to the mainflow",
        "x": 1620,
        "y": 360,
        "wires": []
    },
    {
        "id": "d30b646f879f28ce",
        "type": "debug",
        "z": "b1813a83246977f7",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 600,
        "wires": []
    },
    {
        "id": "47921fd3c88560cf",
        "type": "file in",
        "z": "b1813a83246977f7",
        "name": "Temperature",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\jeswin_test1\\300\\T",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "b02e2babc8a1196a"
            ]
        ]
    },
    {
        "id": "b02e2babc8a1196a",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$substringBefore(payload, \"boundaryField\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Tchanged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 240,
        "wires": [
            [
                "e95c0eab631b519c"
            ]
        ]
    },
    {
        "id": "e1c6e130e895f935",
        "type": "file",
        "z": "b1813a83246977f7",
        "name": "Tnew",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\jeswin_test1\\300\\T",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "ascii",
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "e0a690a21238d9ef"
            ]
        ]
    },
    {
        "id": "9798b407664b3155",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Bchanged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 300,
        "wires": [
            [
                "e95c0eab631b519c"
            ]
        ]
    },
    {
        "id": "e95c0eab631b519c",
        "type": "join",
        "z": "b1813a83246977f7",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 280,
        "wires": [
            [
                "f1f366b61f3c156f"
            ]
        ]
    },
    {
        "id": "f1f366b61f3c156f",
        "type": "function",
        "z": "b1813a83246977f7",
        "name": "function 17",
        "func": "// Combine the two messages here\nvar combinedPayload = msg.payload.Tchanged + \"\\n\" + msg.payload.Bchanged;\n\n// Send the combined message\nmsg.payload = combinedPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "e1c6e130e895f935"
            ]
        ]
    },
    {
        "id": "2cd468e1bf6decba",
        "type": "file in",
        "z": "b1813a83246977f7",
        "name": "Velocity",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\jeswin_test1\\300\\U",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "0f780ea980a92d10"
            ]
        ]
    },
    {
        "id": "0f780ea980a92d10",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$substringBefore(payload, \"boundaryField\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Tchanged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 540,
        "wires": [
            [
                "727d223634f9b3b9"
            ]
        ]
    },
    {
        "id": "727d223634f9b3b9",
        "type": "join",
        "z": "b1813a83246977f7",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 580,
        "wires": [
            [
                "1e7182818b3947c5"
            ]
        ]
    },
    {
        "id": "e52d5b2d5dabab0f",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Bchanged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 600,
        "wires": [
            [
                "727d223634f9b3b9"
            ]
        ]
    },
    {
        "id": "1e7182818b3947c5",
        "type": "function",
        "z": "b1813a83246977f7",
        "name": "function 18",
        "func": "// Combine the two messages here\nvar combinedPayload = msg.payload.Tchanged + \"\\n\" + msg.payload.Bchanged;\n\n// Send the combined message\nmsg.payload = combinedPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 580,
        "wires": [
            [
                "5adb87c4f332be43"
            ]
        ]
    },
    {
        "id": "ce02247d212f3006",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Udone",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 580,
        "wires": [
            [
                "c7de61dde446d51d"
            ]
        ]
    },
    {
        "id": "e0a690a21238d9ef",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Tdone",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "c7de61dde446d51d"
            ]
        ]
    },
    {
        "id": "98cc2d95c9c2db24",
        "type": "join",
        "z": "b1813a83246977f7",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "147c35fd77dca063",
                "7b59104580273092"
            ]
        ]
    },
    {
        "id": "8b20ec3e651b9022",
        "type": "comment",
        "z": "b1813a83246977f7",
        "name": "mainflow",
        "info": "Connects to the mainflow",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "a7de2143765dfa6f",
        "type": "inject",
        "z": "b1813a83246977f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sim_control_mesh",
        "payload": "HE22",
        "payloadType": "str",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "47492cfe4607cde3",
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "670a78077874f71f",
        "type": "mqtt in",
        "z": "b1813a83246977f7",
        "name": "",
        "topic": "sim_control_mesh",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3e23a6fd421c4e41",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 820,
        "wires": [
            [
                "47492cfe4607cde3",
                "98cc2d95c9c2db24",
                "8f7432d09492931e"
            ]
        ]
    },
    {
        "id": "47492cfe4607cde3",
        "type": "template",
        "z": "b1813a83246977f7",
        "name": "Mesh",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "@echo off\nSETLOCAL EnableDelayedExpansion\n\nREM The name of the source folder inside the \"meshes\" directory\nSET \"sourceFolderName={{payload}}\"\n\nREM The path to the \"meshes\" directory\nSET \"meshesPath=%~dp0meshes\"\n\nREM The path to the \"constant\" directory\nSET \"constantPath=%~dp0constant\"\n\nREM Full path to the source folder\nSET \"fullSourcePath=!meshesPath!\\!sourceFolderName!\"\n\nREM Full path to the destination \"polyMesh\" folder\nSET \"polyMeshPath=!constantPath!\\polyMesh\"\n\nREM Path to the \"300\" folder inside the \"latestTime\" directory\nSET \"latestTimePath=%~dp0latestTime\\!sourceFolderName!\\300\"\n\nREM Path to the \"300\" folder in the script's directory\nSET \"destination300Path=%~dp0300\"\n\nREM Check if the source folder exists\nIF NOT EXIST \"!fullSourcePath!\" (\n    echo Source folder \"!fullSourcePath!\" does not exist.\n    exit /b\n)\n\nREM Remove the existing \"polyMesh\" folder if it exists\nIF EXIST \"!polyMeshPath!\" (\n    echo Removing existing polyMesh folder...\n    RMDIR /S /Q \"!polyMeshPath!\"\n)\n\nREM Copy the contents from the source folder to the \"polyMesh\" folder\necho Copying from \"!fullSourcePath!\" to \"!polyMeshPath!\"...\nXCOPY /E /I \"!fullSourcePath!\" \"!polyMeshPath!\"\n\nREM Check if the \"300\" folder exists in the \"latestTime\" directory\nIF NOT EXIST \"!latestTimePath!\" (\n    echo \"300\" folder \"!latestTimePath!\" does not exist.\n    exit /b\n)\n\nREM Remove the existing \"300\" folder in the script's directory if it exists\nIF EXIST \"!destination300Path!\" (\n    echo Removing existing \"300\" folder in the script's directory...\n    RMDIR /S /Q \"!destination300Path!\"\n)\n\nREM Copy the \"300\" folder from the \"latestTime\" directory to the script's directory\necho Copying from \"!latestTimePath!\" to \"!destination300Path!\"...\nXCOPY /E /I \"!latestTimePath!\" \"!destination300Path!\"\n\necho Done.\nENDLOCAL\n",
        "output": "str",
        "x": 490,
        "y": 740,
        "wires": [
            [
                "edf7298cf382540b"
            ]
        ]
    },
    {
        "id": "edf7298cf382540b",
        "type": "file",
        "z": "b1813a83246977f7",
        "name": "Mnew",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\jeswin_test1\\meshes.bat",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "ascii",
        "x": 690,
        "y": 740,
        "wires": [
            [
                "2b027b1fa9fc7aee"
            ]
        ]
    },
    {
        "id": "2b027b1fa9fc7aee",
        "type": "exec",
        "z": "b1813a83246977f7",
        "command": "\"C:/Users/XR-Lab/Documents/Jeswin Files/Project HoloCFD/openfoamdocker/jeswin_test1/meshes.bat\" ",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "meshes.bat",
        "x": 890,
        "y": 740,
        "wires": [
            [],
            [],
            [
                "2cd468e1bf6decba",
                "47921fd3c88560cf"
            ]
        ]
    },
    {
        "id": "8f7432d09492931e",
        "type": "debug",
        "z": "b1813a83246977f7",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 840,
        "wires": []
    },
    {
        "id": "d75802a33d2734ec",
        "type": "inject",
        "z": "b1813a83246977f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sim_control_postprocess",
        "payload": "T",
        "payloadType": "str",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "4c8e54649e3d6ded",
        "type": "mqtt in",
        "z": "b1813a83246977f7",
        "name": "",
        "topic": "sim_control_postprocess",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3e23a6fd421c4e41",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1060,
        "wires": [
            [
                "98cc2d95c9c2db24"
            ]
        ]
    },
    {
        "id": "147c35fd77dca063",
        "type": "function",
        "z": "b1813a83246977f7",
        "name": "FilenameChange",
        "func": "// Combine the two messages here\nvar combinedPayload = msg.payload.sim_control_temperature + '+' + msg.payload.sim_control_velocity + '+' + msg.payload.sim_control_mesh + '+' + msg.payload.sim_control_postprocess;\n\n// Send the combined message\nmsg.payload = combinedPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 420,
        "wires": [
            [
                "a8251146f020b07f",
                "554c3e359c5104e7",
                "c076c68f141b6520"
            ]
        ]
    },
    {
        "id": "7b59104580273092",
        "type": "function",
        "z": "b1813a83246977f7",
        "name": "PostprocessChange",
        "func": "// Combine the two messages here\nvar combinedPayload = msg.payload.sim_control_postprocess;\n\n// Send the combined message\nmsg.payload = combinedPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 480,
        "wires": [
            [
                "b84a83f22a4aaae5"
            ]
        ]
    },
    {
        "id": "a8251146f020b07f",
        "type": "template",
        "z": "b1813a83246977f7",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import bpy\nimport os\nfrom distutils.dir_util import copy_tree\nimport timeit\nimport glob\nimport shutil\n\n#start2 = timeit.default_timer()\n#data format to export visual CFD data from ParaView: x3d, vrml, svg and other supported formats\n#(optional) exportParaview = input ('Enter the export format from ParaView: ')\nexportParaview = 'x3d'\nexport_format_paraview = '.' + exportParaview\n\nimport_format_blender = export_format_paraview\n#data format to export visual CFD data from Blender: fbx, obj, 3ds, ply, stl and other supported formats\n\nexportBlender = 'glb'  # Define the export format for Blender\nexport_format_blender = '.' + exportBlender\n#create a directory to collect processed data and metadata\npath_metadata = 'process/metadata/'\nos.makedirs(path_metadata, exist_ok=True)\npath_paraview = os.getcwd() + '/' + path_metadata\npath_blender = path_paraview\npath_unityfor = os.getcwd() + '/' + 'process/'\n# Loop through all objects in the scene\n#blender starts metadata import & export\npath_to_obj_dir = os.path.join(path_blender)\n#get list of all files in directory\nfile_list = sorted(os.listdir(path_to_obj_dir))\n#get a list of files ending in 'obj' in Blender\nobj_list = [item for item in file_list if item.endswith(import_format_blender)]\n#loop through the strings in obj_list and add the files to the scene\nfor item in obj_list:\n    path_to_file = os.path.join(path_to_obj_dir, item)\n    bpy.ops.import_scene.x3d(filepath = path_to_file)\n    #get the current path and make a new folder for the exported meshes\n    path_blender = bpy.path.abspath(path_blender)\n    # Get a reference to the current active scene\n    scene = bpy.context.scene\n    for obj in scene.objects:\n        bpy.ops.object.select_all(action='DESELECT') #to deselect all meshes\n        # Select the current object\n\n        # Check if the object name starts with \"Shape_IndexedFaceSet\"\n        #if obj.name.startswith(\"Shape_IndexedFaceSet\"):\n        if obj.name != \"Cube\":\n            # Select the object\n            obj.select_set(True)\n            print(obj.name)\n        \n    \n    bpy.ops.export_scene.gltf(filepath=path_blender + '{{payload}}' + export_format_blender, export_format='GLB', use_selection=True,export_tangents=True, export_attributes=True,) \n    print(\"Done\")   \n\n\"\"\"\nData processing analytics for qualitative studies (3)\n\"\"\"\n        \npath_to_obj_dir = os.path.join(path_blender)\nfile_list = sorted(os.listdir(path_to_obj_dir))\nobj_list = [item for item in file_list if item.endswith('.glb')]\nsize_file_blender = []\nfor item in obj_list:\n    path_to_file = os.path.join(path_to_obj_dir, item)\n    size_processing_blender=os.path.getsize(path_to_file)\n    print('GLB file sizes in bytes:',size_processing_blender)\n    size_file_blender.append(size_processing_blender)\n    shutil.copy(path_to_file, os.getcwd() + '/' + 'ExpressServer/ABs/')\n    cloud_path = r\"Z:\\TestCFD\"\n    shutil.copy(path_to_file, cloud_path)\n\nprint('Data processing has successfully been completed!')\n\n#clean up metadata \n#metadata = input ('Clean all metadata? [y or n]: ')\nmetadata = \"y\"\nmypath = path_paraview\nif metadata == 'y':\n    for mydata in glob.glob(mypath + \"Shape*\"):\n        shutil.copy(mydata, os.getcwd() + '/' + 'process/')\n    for metadata in glob.glob(mypath + \"*\"):\n        os.remove(metadata)\n    print ('Metadata is cleaned.')\nelse:\n    print ('Metadata is available under the process directory.')\n#self.text_comments.insert('end', open(filename,'r').read())\n\n\n\n\n\"\"\"\nThe end\n\"\"\"",
        "output": "str",
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "a80305285b740241"
            ]
        ]
    },
    {
        "id": "b84a83f22a4aaae5",
        "type": "template",
        "z": "b1813a83246977f7",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "import os\nimport sys\nimport timeit\nimport glob\nimport shutil\nfrom distutils.dir_util import copy_tree\nfrom paraview.simple import *\n\n#start2 = timeit.default_timer()\n#data format to export visual CFD data from ParaView: x3d, vrml, svg and other supported formats\n#(optional) exportParaview = input ('Enter the export format from ParaView: ')\nexportParaview = 'x3d'\nexport_format_paraview = '.' + exportParaview\n\nimport_format_blender = export_format_paraview\n#data format to export visual CFD data from Blender: fbx, obj, 3ds, ply, stl and other supported formats\n\nexportBlender = 'glb'  # Define the export format for Blender\nexport_format_blender = '.' + exportBlender\n#create a directory to collect processed data and metadata\nstatefile = \"{{payload}}.py\"\npath_metadata = 'process/metadata/'\nos.makedirs(path_metadata, exist_ok=True)\npath_paraview = os.getcwd() + '/' + path_metadata\npath_blender = path_paraview\npath_unityfor = os.getcwd() + '/' + 'process/'\n\n# Logging of operations from terminal and save in a text file\nclass Tee(object):\n    def __init__(self, *files):\n        self.files = files\n\n    def write(self, obj):\n        for f in self.files:\n            f.write(obj)\n            f.flush()  # If you want the output to be visible immediately\n\n    def flush(self):\n        for f in self.files:\n            f.flush()\n\nf = open('logfile_tessellate.txt', 'w')\noriginal = sys.stdout\nsys.stdout = Tee(sys.stdout, f)\nprint(\"Data processing is in progress...\")\n\n# ParaView state file operation\n# Timer for each section - data processing speed\nstart1 = timeit.default_timer()\n# Import user-defined Paraview state\nexec(open(statefile).read())\n\n# Update the view to ensure updated data information\nrenderView1 = GetActiveViewOrCreate('RenderView')\nrenderView1.Update()\nstop1 = timeit.default_timer()\n\n# Data processing via ParaView pipeline\nstart2 = timeit.default_timer()\n# Create a directory to collect processed data and metadata\nos.makedirs(path_paraview, exist_ok=True)\n\n# Define the total number of timesteps (1 for steady-state solutions)\ntimestep_sim = 2\n\n# Obtain a list of timesteps with values\nanimationScene1 = GetAnimationScene()\ntsteps = animationScene1.TimeKeeper.TimestepValues\n# Check if tsteps is a single float value or a list/array\nif isinstance(tsteps, float):\n    # If it's a float, make it a list with one element\n    tsteps = [tsteps]\n\n# Now you can safely access the last element\nanimationScene1.AnimationTime = tsteps[-1]\nanimationScene1.AnimationTime = tsteps[-1]\n# ParaView metadata export\nExportView(path_paraview + str(tsteps[-1]) + export_format_paraview, view=renderView1, ExportColorLegends=1)\n\n\n# for x in range(0, timestep_sim):\n#     # ParaView metadata export\n#     ExportView(path_paraview + str(x) + export_format_paraview, view=renderView1, ExportColorLegends=1)\n#     # Check out the data processed\n#     SaveScreenshot(path_paraview + str(x) + '.png', renderView1, ImageResolution=[1025, 782])\n#     # Switch to the next timestep\n#     animationScene1 = GetAnimationScene()\n#     animationScene1.AnimationTime = tsteps[-1]\nstop2 = timeit.default_timer()\n\n\"\"\"\nData processing analytics for qualitative studies (3)\n\"\"\"\n        \n#b_x3d = os.path.getsize(path_blender + tsteps[-1]+'.x3d')\nprint('*****Data processing performance & analytics*****')\nprint('Time_ParaView: ', stop1 - start1)\n#print('X3D file size in bytes:',b_x3d)\nprint('Time_ParaView_Blender: ', stop2 - start2)\nprint('Time_Integration (sec): ', stop2 - start2 + stop1 - start1)",
        "output": "str",
        "x": 1000,
        "y": 480,
        "wires": [
            [
                "8ca60a73f8ba9341"
            ]
        ]
    },
    {
        "id": "a80305285b740241",
        "type": "file",
        "z": "b1813a83246977f7",
        "name": "TesselateBlender",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\TesselateBlender.py",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "52bf8058d89ca1de"
            ]
        ]
    },
    {
        "id": "8ca60a73f8ba9341",
        "type": "file",
        "z": "b1813a83246977f7",
        "name": "TesselateParaview",
        "filename": "C:\\Users\\XR-Lab\\Documents\\Jeswin Files\\Project HoloCFD\\openfoamdocker\\TesselateParaview.py",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "0fb6e667a1a1d3c5"
            ]
        ]
    },
    {
        "id": "0fb6e667a1a1d3c5",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "NameSet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Postprocesschanged",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PostprocessChangedNameSet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 480,
        "wires": [
            [
                "c7de61dde446d51d"
            ]
        ]
    },
    {
        "id": "52bf8058d89ca1de",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "NameSet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NameChanged",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NameSet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 420,
        "wires": [
            [
                "c7de61dde446d51d"
            ]
        ]
    },
    {
        "id": "554c3e359c5104e7",
        "type": "link out",
        "z": "b1813a83246977f7",
        "name": "filename",
        "mode": "link",
        "links": [
            "0b699531b271db04"
        ],
        "x": 1005,
        "y": 360,
        "wires": []
    },
    {
        "id": "775b122beb07d83a",
        "type": "change",
        "z": "b1813a83246977f7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Preconfig,Success",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 420,
        "wires": [
            [
                "643ffeb4a6cb1432"
            ]
        ]
    },
    {
        "id": "c076c68f141b6520",
        "type": "debug",
        "z": "b1813a83246977f7",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 680,
        "wires": []
    }
]